import time

from clean import clean
from parse_module import parse_main
from rectify_module import rectify_main
from graph_module import graph_main
from slice_module import slice_main

clean()

with open("time.txt", "w") as t_log:
    start = time.perf_counter()
    parse_main.parse()          # 解析代码，借助joern将代码解析成CPG（代码属性图），然后从图中提取出需要的数据
    t_log.write(
        f"[{'Parsing the testcase':^25}]"
        f"  used {time.perf_counter() - start:>7.2f}s\n"
    )

with open("time.txt", "a+") as t_log:
    start = time.perf_counter()
    rectify_main.rectify()      # 数据修正 ？
    t_log.write(
        f"[{'Rectifying the result':^25}]"
        f"  used {time.perf_counter() - start:>7.2f}s\n"
    )

with open("time.txt", "a+") as t_log:
    start = time.perf_counter()
    graph_main.generate()   # 切片准备
    t_log.write(
        f"[{'Preparing for slicing':^25}]"
        f"  used {time.perf_counter() - start:>7.2f}s\n"
    )

with open("time.txt", "a+") as t_log:
    start = time.perf_counter()
    slice_main.compute()    # 切片
    t_log.write(
        f"[{'Computing slice result':^25}]"
        f"  used {time.perf_counter() - start:>7.2f}s\n"
    )
